//for zones that trigger enemies within them to target player when they step in
//here's the part where I should replace with event-based code in future for efficiency
class EnemyAggroZone : ZilchComponent
{
    var Target : Cog;
    
    [Property]
    var NumEnemies : Integer;
    
    [Property]
    var SecondWaveNum : Integer = 0;
    
    [Property]
    var ThirdWaveNum : Integer = 0;
    
    [Property]
    var FourthWaveNum : Integer = 0;
     
     
     //Can't use this because you can't make arrays properties anymore? D:
    var WaveNumbers : Array[Integer] = new Array[Integer]();
    
    var Wave : Integer = 1; //only works for 1 extra
    function Initialize(init : CogInitializer)
    {
        //Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
        Zero.Connect(this.Owner, Events.CollisionPersisted, this.OnCollision);
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
    }
    
    function OnCollision(event : CollisionEvent)
    {
        if(event.OtherObject.Collider.CollisionGroup == CollisionGroup.FriendlyEntity)
        {
            this.Target = event.OtherObject;
        }
        if(event.OtherObject.Collider.CollisionGroup == CollisionGroup.EnemyEntity)
        {
            if(event.OtherObject.ZombieAI != null)
            {
                if(event.OtherObject.ZombieAI.AggroZoneCog == null)
                {
                    event.OtherObject.ZombieAI.AggroZoneCog = this.Owner;
                }
            } else if(event.OtherObject.TurretAI != null)
            {
                if(event.OtherObject.TurretAI.AggroZoneCog == null)
                {
                    event.OtherObject.RigidBody.DynamicState = RigidBodyDynamicState.Static;
                    event.OtherObject.TurretAI.AggroZoneCog = this.Owner;
                }
            }
        }
    }
    
    function EnemyKilled()
    {
        --this.NumEnemies;
        if(this.NumEnemies < 1)
        {
            ++this.Wave;
            if(this.Wave == 2)
            {
                this.NumEnemies = this.SecondWaveNum;
            } else if(this.Wave == 3)
            {
                this.NumEnemies = this.ThirdWaveNum;
            } else if(this.Wave == 4)
            {
                this.NumEnemies = this.FourthWaveNum;
            }
        }
    }
}
